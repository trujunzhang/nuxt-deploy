"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextFieldRowHelper = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var TextFieldRowHelper = function TextFieldRowHelper() {
  (0, _classCallCheck2["default"])(this, TextFieldRowHelper);
};

exports.TextFieldRowHelper = TextFieldRowHelper;
TextFieldRowHelper.EDIT_MODEL_DATA_ROWS = {
  INPUT_DISPLAY_NAME: {
    id: 'display_name',
    labelId: 'Name',
    type: 'text',
    name: 'displayName',
    placeHoldId: '',
    errorId: '',
    field: 'displayName'
  },
  INPUT_EVENT_WHAT: {
    id: 'event_what',
    labelId: 'What & Why',
    type: 'text',
    name: 'eventWhat',
    placeHoldId: '',
    errorId: '',
    field: 'eventWhat'
  },
  INPUT_RECIPE_PRICE: {
    id: 'recipe_price',
    labelId: 'Price',
    type: 'text',
    name: 'price',
    placeHoldId: '',
    errorId: '',
    field: 'price'
  },
  INPUT_REVIEW_BODY: {
    id: 'review_body',
    labelId: "Your review helps others learn about great local businesses. \n\n Please don't review this business if you received a freebie for writing this review, or if you're connected in any way to the owner or employees.",
    type: 'text',
    name: 'reviewBody',
    placeHoldId: '',
    errorId: '',
    field: 'reviewBody'
  }
};
TextFieldRowHelper.DATA_ROWS = {
  INPUT_USERNAME_OR_EMAIL: {
    id: 'signin_username_or_email_input',
    labelId: 'Username or Email',
    type: 'text',
    name: 'usernameOrEmail',
    placeHoldId: '',
    errorId: '',
    field: 'usernameOrEmail'
  },
  INPUT_USERNAME: {
    id: 'username',
    labelId: 'Username',
    type: 'text',
    name: 'username',
    placeHoldId: '',
    errorId: '',
    field: 'username'
  },
  INPUT_EMAIL: {
    id: 'email',
    labelId: 'Email',
    type: 'email',
    name: 'email',
    placeHoldId: '',
    errorId: '',
    field: 'email'
  },
  INPUT_PASSWORD: {
    id: 'password',
    labelId: 'Password',
    type: 'password',
    name: 'password',
    placeHoldId: '',
    errorId: '',
    field: 'password'
  },
  INPUT_NEW_PASSWORD: {
    id: 'password',
    labelId: 'New Password',
    type: 'password',
    name: 'password',
    placeHoldId: '',
    errorId: '',
    field: 'password'
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hcHBMaWJzL2hlbHBlci90ZXh0RmllbGRSb3dIZWxwZXIudHMiXSwibmFtZXMiOlsiVGV4dEZpZWxkUm93SGVscGVyIiwiRURJVF9NT0RFTF9EQVRBX1JPV1MiLCJJTlBVVF9ESVNQTEFZX05BTUUiLCJpZCIsImxhYmVsSWQiLCJ0eXBlIiwibmFtZSIsInBsYWNlSG9sZElkIiwiZXJyb3JJZCIsImZpZWxkIiwiSU5QVVRfRVZFTlRfV0hBVCIsIklOUFVUX1JFQ0lQRV9QUklDRSIsIklOUFVUX1JFVklFV19CT0RZIiwiREFUQV9ST1dTIiwiSU5QVVRfVVNFUk5BTUVfT1JfRU1BSUwiLCJJTlBVVF9VU0VSTkFNRSIsIklOUFVUX0VNQUlMIiwiSU5QVVRfUEFTU1dPUkQiLCJJTlBVVF9ORVdfUEFTU1dPUkQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBQWFBLGtCOzs7OztBQUFBQSxrQixDQUNKQyxvQixHQUFpRDtBQUN0REMsRUFBQUEsa0JBQWtCLEVBQUU7QUFDbEJDLElBQUFBLEVBQUUsRUFBRSxjQURjO0FBRWxCQyxJQUFBQSxPQUFPLEVBQUUsTUFGUztBQUdsQkMsSUFBQUEsSUFBSSxFQUFFLE1BSFk7QUFJbEJDLElBQUFBLElBQUksRUFBRSxhQUpZO0FBS2xCQyxJQUFBQSxXQUFXLEVBQUUsRUFMSztBQU1sQkMsSUFBQUEsT0FBTyxFQUFFLEVBTlM7QUFPbEJDLElBQUFBLEtBQUssRUFBRTtBQVBXLEdBRGtDO0FBVXREQyxFQUFBQSxnQkFBZ0IsRUFBRTtBQUNoQlAsSUFBQUEsRUFBRSxFQUFFLFlBRFk7QUFFaEJDLElBQUFBLE9BQU8sRUFBRSxZQUZPO0FBR2hCQyxJQUFBQSxJQUFJLEVBQUUsTUFIVTtBQUloQkMsSUFBQUEsSUFBSSxFQUFFLFdBSlU7QUFLaEJDLElBQUFBLFdBQVcsRUFBRSxFQUxHO0FBTWhCQyxJQUFBQSxPQUFPLEVBQUUsRUFOTztBQU9oQkMsSUFBQUEsS0FBSyxFQUFFO0FBUFMsR0FWb0M7QUFtQnRERSxFQUFBQSxrQkFBa0IsRUFBRTtBQUNsQlIsSUFBQUEsRUFBRSxFQUFFLGNBRGM7QUFFbEJDLElBQUFBLE9BQU8sRUFBRSxPQUZTO0FBR2xCQyxJQUFBQSxJQUFJLEVBQUUsTUFIWTtBQUlsQkMsSUFBQUEsSUFBSSxFQUFFLE9BSlk7QUFLbEJDLElBQUFBLFdBQVcsRUFBRSxFQUxLO0FBTWxCQyxJQUFBQSxPQUFPLEVBQUUsRUFOUztBQU9sQkMsSUFBQUEsS0FBSyxFQUFFO0FBUFcsR0FuQmtDO0FBNEJ0REcsRUFBQUEsaUJBQWlCLEVBQUU7QUFDakJULElBQUFBLEVBQUUsRUFBRSxhQURhO0FBRWpCQyxJQUFBQSxPQUFPLEVBQ0wscU5BSGU7QUFJakJDLElBQUFBLElBQUksRUFBRSxNQUpXO0FBS2pCQyxJQUFBQSxJQUFJLEVBQUUsWUFMVztBQU1qQkMsSUFBQUEsV0FBVyxFQUFFLEVBTkk7QUFPakJDLElBQUFBLE9BQU8sRUFBRSxFQVBRO0FBUWpCQyxJQUFBQSxLQUFLLEVBQUU7QUFSVTtBQTVCbUMsQztBQUQ3Q1Qsa0IsQ0F3Q0phLFMsR0FBc0M7QUFDM0NDLEVBQUFBLHVCQUF1QixFQUFFO0FBQ3ZCWCxJQUFBQSxFQUFFLEVBQUUsZ0NBRG1CO0FBRXZCQyxJQUFBQSxPQUFPLEVBQUUsbUJBRmM7QUFHdkJDLElBQUFBLElBQUksRUFBRSxNQUhpQjtBQUl2QkMsSUFBQUEsSUFBSSxFQUFFLGlCQUppQjtBQUt2QkMsSUFBQUEsV0FBVyxFQUFFLEVBTFU7QUFNdkJDLElBQUFBLE9BQU8sRUFBRSxFQU5jO0FBT3ZCQyxJQUFBQSxLQUFLLEVBQUU7QUFQZ0IsR0FEa0I7QUFVM0NNLEVBQUFBLGNBQWMsRUFBRTtBQUNkWixJQUFBQSxFQUFFLEVBQUUsVUFEVTtBQUVkQyxJQUFBQSxPQUFPLEVBQUUsVUFGSztBQUdkQyxJQUFBQSxJQUFJLEVBQUUsTUFIUTtBQUlkQyxJQUFBQSxJQUFJLEVBQUUsVUFKUTtBQUtkQyxJQUFBQSxXQUFXLEVBQUUsRUFMQztBQU1kQyxJQUFBQSxPQUFPLEVBQUUsRUFOSztBQU9kQyxJQUFBQSxLQUFLLEVBQUU7QUFQTyxHQVYyQjtBQW1CM0NPLEVBQUFBLFdBQVcsRUFBRTtBQUNYYixJQUFBQSxFQUFFLEVBQUUsT0FETztBQUVYQyxJQUFBQSxPQUFPLEVBQUUsT0FGRTtBQUdYQyxJQUFBQSxJQUFJLEVBQUUsT0FISztBQUlYQyxJQUFBQSxJQUFJLEVBQUUsT0FKSztBQUtYQyxJQUFBQSxXQUFXLEVBQUUsRUFMRjtBQU1YQyxJQUFBQSxPQUFPLEVBQUUsRUFORTtBQU9YQyxJQUFBQSxLQUFLLEVBQUU7QUFQSSxHQW5COEI7QUE0QjNDUSxFQUFBQSxjQUFjLEVBQUU7QUFDZGQsSUFBQUEsRUFBRSxFQUFFLFVBRFU7QUFFZEMsSUFBQUEsT0FBTyxFQUFFLFVBRks7QUFHZEMsSUFBQUEsSUFBSSxFQUFFLFVBSFE7QUFJZEMsSUFBQUEsSUFBSSxFQUFFLFVBSlE7QUFLZEMsSUFBQUEsV0FBVyxFQUFFLEVBTEM7QUFNZEMsSUFBQUEsT0FBTyxFQUFFLEVBTks7QUFPZEMsSUFBQUEsS0FBSyxFQUFFO0FBUE8sR0E1QjJCO0FBcUMzQ1MsRUFBQUEsa0JBQWtCLEVBQUU7QUFDbEJmLElBQUFBLEVBQUUsRUFBRSxVQURjO0FBRWxCQyxJQUFBQSxPQUFPLEVBQUUsY0FGUztBQUdsQkMsSUFBQUEsSUFBSSxFQUFFLFVBSFk7QUFJbEJDLElBQUFBLElBQUksRUFBRSxVQUpZO0FBS2xCQyxJQUFBQSxXQUFXLEVBQUUsRUFMSztBQU1sQkMsSUFBQUEsT0FBTyxFQUFFLEVBTlM7QUFPbEJDLElBQUFBLEtBQUssRUFBRTtBQVBXO0FBckN1QixDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFRleHRGaWVsZFJvd0hlbHBlciB7XG4gIHN0YXRpYyBFRElUX01PREVMX0RBVEFfUk9XUzogSUxpc3REaWN0PElUZXh0RmllbGRSb3c+ID0ge1xuICAgIElOUFVUX0RJU1BMQVlfTkFNRToge1xuICAgICAgaWQ6ICdkaXNwbGF5X25hbWUnLFxuICAgICAgbGFiZWxJZDogJ05hbWUnLFxuICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgbmFtZTogJ2Rpc3BsYXlOYW1lJyxcbiAgICAgIHBsYWNlSG9sZElkOiAnJyxcbiAgICAgIGVycm9ySWQ6ICcnLFxuICAgICAgZmllbGQ6ICdkaXNwbGF5TmFtZSdcbiAgICB9LFxuICAgIElOUFVUX0VWRU5UX1dIQVQ6IHtcbiAgICAgIGlkOiAnZXZlbnRfd2hhdCcsXG4gICAgICBsYWJlbElkOiAnV2hhdCAmIFdoeScsXG4gICAgICB0eXBlOiAndGV4dCcsXG4gICAgICBuYW1lOiAnZXZlbnRXaGF0JyxcbiAgICAgIHBsYWNlSG9sZElkOiAnJyxcbiAgICAgIGVycm9ySWQ6ICcnLFxuICAgICAgZmllbGQ6ICdldmVudFdoYXQnXG4gICAgfSxcbiAgICBJTlBVVF9SRUNJUEVfUFJJQ0U6IHtcbiAgICAgIGlkOiAncmVjaXBlX3ByaWNlJyxcbiAgICAgIGxhYmVsSWQ6ICdQcmljZScsXG4gICAgICB0eXBlOiAndGV4dCcsXG4gICAgICBuYW1lOiAncHJpY2UnLFxuICAgICAgcGxhY2VIb2xkSWQ6ICcnLFxuICAgICAgZXJyb3JJZDogJycsXG4gICAgICBmaWVsZDogJ3ByaWNlJ1xuICAgIH0sXG4gICAgSU5QVVRfUkVWSUVXX0JPRFk6IHtcbiAgICAgIGlkOiAncmV2aWV3X2JvZHknLFxuICAgICAgbGFiZWxJZDpcbiAgICAgICAgXCJZb3VyIHJldmlldyBoZWxwcyBvdGhlcnMgbGVhcm4gYWJvdXQgZ3JlYXQgbG9jYWwgYnVzaW5lc3Nlcy4gXFxuXFxuIFBsZWFzZSBkb24ndCByZXZpZXcgdGhpcyBidXNpbmVzcyBpZiB5b3UgcmVjZWl2ZWQgYSBmcmVlYmllIGZvciB3cml0aW5nIHRoaXMgcmV2aWV3LCBvciBpZiB5b3UncmUgY29ubmVjdGVkIGluIGFueSB3YXkgdG8gdGhlIG93bmVyIG9yIGVtcGxveWVlcy5cIixcbiAgICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAgIG5hbWU6ICdyZXZpZXdCb2R5JyxcbiAgICAgIHBsYWNlSG9sZElkOiAnJyxcbiAgICAgIGVycm9ySWQ6ICcnLFxuICAgICAgZmllbGQ6ICdyZXZpZXdCb2R5J1xuICAgIH1cbiAgfVxuICBzdGF0aWMgREFUQV9ST1dTOiBJTGlzdERpY3Q8SVRleHRGaWVsZFJvdz4gPSB7XG4gICAgSU5QVVRfVVNFUk5BTUVfT1JfRU1BSUw6IHtcbiAgICAgIGlkOiAnc2lnbmluX3VzZXJuYW1lX29yX2VtYWlsX2lucHV0JyxcbiAgICAgIGxhYmVsSWQ6ICdVc2VybmFtZSBvciBFbWFpbCcsXG4gICAgICB0eXBlOiAndGV4dCcsXG4gICAgICBuYW1lOiAndXNlcm5hbWVPckVtYWlsJyxcbiAgICAgIHBsYWNlSG9sZElkOiAnJyxcbiAgICAgIGVycm9ySWQ6ICcnLFxuICAgICAgZmllbGQ6ICd1c2VybmFtZU9yRW1haWwnXG4gICAgfSxcbiAgICBJTlBVVF9VU0VSTkFNRToge1xuICAgICAgaWQ6ICd1c2VybmFtZScsXG4gICAgICBsYWJlbElkOiAnVXNlcm5hbWUnLFxuICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgbmFtZTogJ3VzZXJuYW1lJyxcbiAgICAgIHBsYWNlSG9sZElkOiAnJyxcbiAgICAgIGVycm9ySWQ6ICcnLFxuICAgICAgZmllbGQ6ICd1c2VybmFtZSdcbiAgICB9LFxuICAgIElOUFVUX0VNQUlMOiB7XG4gICAgICBpZDogJ2VtYWlsJyxcbiAgICAgIGxhYmVsSWQ6ICdFbWFpbCcsXG4gICAgICB0eXBlOiAnZW1haWwnLFxuICAgICAgbmFtZTogJ2VtYWlsJyxcbiAgICAgIHBsYWNlSG9sZElkOiAnJyxcbiAgICAgIGVycm9ySWQ6ICcnLFxuICAgICAgZmllbGQ6ICdlbWFpbCdcbiAgICB9LFxuICAgIElOUFVUX1BBU1NXT1JEOiB7XG4gICAgICBpZDogJ3Bhc3N3b3JkJyxcbiAgICAgIGxhYmVsSWQ6ICdQYXNzd29yZCcsXG4gICAgICB0eXBlOiAncGFzc3dvcmQnLFxuICAgICAgbmFtZTogJ3Bhc3N3b3JkJyxcbiAgICAgIHBsYWNlSG9sZElkOiAnJyxcbiAgICAgIGVycm9ySWQ6ICcnLFxuICAgICAgZmllbGQ6ICdwYXNzd29yZCdcbiAgICB9LFxuICAgIElOUFVUX05FV19QQVNTV09SRDoge1xuICAgICAgaWQ6ICdwYXNzd29yZCcsXG4gICAgICBsYWJlbElkOiAnTmV3IFBhc3N3b3JkJyxcbiAgICAgIHR5cGU6ICdwYXNzd29yZCcsXG4gICAgICBuYW1lOiAncGFzc3dvcmQnLFxuICAgICAgcGxhY2VIb2xkSWQ6ICcnLFxuICAgICAgZXJyb3JJZDogJycsXG4gICAgICBmaWVsZDogJ3Bhc3N3b3JkJ1xuICAgIH1cbiAgfVxufVxuIl19
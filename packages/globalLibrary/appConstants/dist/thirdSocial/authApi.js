"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.twitterServerConfigure = exports.twitterConfig = exports.facebookConfig = void 0;
// https://politicl.com/users/my/edit
var facebookCallbackURL = 'https://politicl.com/auth/facebook/callback';

if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {
  facebookCallbackURL = 'http://localhost:4000/auth/facebook/callback';
}

var facebookConfig = {
  facebook_appId: '1050096535124346',
  facebook_secret: 'd969c13f2d19112e26c6b9c3f2563d2f',
  fields: 'name,email,picture',
  facebook_callbackURL: facebookCallbackURL,
  profileURL: 'https://graph.facebook.com/v2.5/me?fields=first_name,last_name,email',
  profileFields: ['id', 'email', 'name'] // For requesting permissions from Facebook API

};
exports.facebookConfig = facebookConfig;
var twitterConfig = {
  consumerKey: 'rkBigq6to0XYLpn81HwfkvweJ',
  consumerSecret: '30D0x2SOCHaU5bzyRWPfw8DCRleOFVyIRmQjRBfzvk4QV2xz6N'
};
exports.twitterConfig = twitterConfig;
var twitterServerConfigure = {
  loginUrl: 'https://politicl.com/auth/v1/auth/twitter',
  requestTokenUrl: 'https://politicl.com/auth/v1/auth/twitter/reverse'
};
exports.twitterServerConfigure = twitterServerConfigure;

if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {
  exports.twitterServerConfigure = twitterServerConfigure = {
    loginUrl: 'http://localhost:4000/auth/v1/auth/twitter',
    requestTokenUrl: 'http://localhost:4000/auth/v1/auth/twitter/reverse'
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90aGlyZFNvY2lhbC9hdXRoQXBpLnRzIl0sIm5hbWVzIjpbImZhY2Vib29rQ2FsbGJhY2tVUkwiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJmYWNlYm9va0NvbmZpZyIsImZhY2Vib29rX2FwcElkIiwiZmFjZWJvb2tfc2VjcmV0IiwiZmllbGRzIiwiZmFjZWJvb2tfY2FsbGJhY2tVUkwiLCJwcm9maWxlVVJMIiwicHJvZmlsZUZpZWxkcyIsInR3aXR0ZXJDb25maWciLCJjb25zdW1lcktleSIsImNvbnN1bWVyU2VjcmV0IiwidHdpdHRlclNlcnZlckNvbmZpZ3VyZSIsImxvZ2luVXJsIiwicmVxdWVzdFRva2VuVXJsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBLElBQUlBLG1CQUEyQixHQUFHLDZDQUFsQzs7QUFDQSxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFiLElBQXlCRixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixLQUF5QixhQUF0RCxFQUFxRTtBQUNuRUgsRUFBQUEsbUJBQW1CLEdBQUcsOENBQXRCO0FBQ0Q7O0FBRUQsSUFBTUksY0FBYyxHQUFHO0FBQ3JCQyxFQUFBQSxjQUFjLEVBQUUsa0JBREs7QUFFckJDLEVBQUFBLGVBQWUsRUFBRSxrQ0FGSTtBQUdyQkMsRUFBQUEsTUFBTSxFQUFFLG9CQUhhO0FBSXJCQyxFQUFBQSxvQkFBb0IsRUFBRVIsbUJBSkQ7QUFLckJTLEVBQUFBLFVBQVUsRUFBRSxzRUFMUztBQU1yQkMsRUFBQUEsYUFBYSxFQUFFLENBQUMsSUFBRCxFQUFPLE9BQVAsRUFBZ0IsTUFBaEIsQ0FOTSxDQU1rQjs7QUFObEIsQ0FBdkI7O0FBU0EsSUFBTUMsYUFBYSxHQUFHO0FBQ3BCQyxFQUFBQSxXQUFXLEVBQUUsMkJBRE87QUFFcEJDLEVBQUFBLGNBQWMsRUFBRTtBQUZJLENBQXRCOztBQUtBLElBQUlDLHNCQUFzQixHQUFHO0FBQzNCQyxFQUFBQSxRQUFRLEVBQUUsMkNBRGlCO0FBRTNCQyxFQUFBQSxlQUFlLEVBQUU7QUFGVSxDQUE3Qjs7O0FBS0EsSUFBSSxDQUFDZixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBYixJQUF5QkYsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsYUFBdEQsRUFBcUU7QUFDbkUsbUNBQUFXLHNCQUFzQixHQUFHO0FBQ3ZCQyxJQUFBQSxRQUFRLEVBQUUsNENBRGE7QUFFdkJDLElBQUFBLGVBQWUsRUFBRTtBQUZNLEdBQXpCO0FBSUQiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBodHRwczovL3BvbGl0aWNsLmNvbS91c2Vycy9teS9lZGl0XG5sZXQgZmFjZWJvb2tDYWxsYmFja1VSTDogc3RyaW5nID0gJ2h0dHBzOi8vcG9saXRpY2wuY29tL2F1dGgvZmFjZWJvb2svY2FsbGJhY2snXG5pZiAoIXByb2Nlc3MuZW52Lk5PREVfRU5WIHx8IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gIGZhY2Vib29rQ2FsbGJhY2tVUkwgPSAnaHR0cDovL2xvY2FsaG9zdDo0MDAwL2F1dGgvZmFjZWJvb2svY2FsbGJhY2snXG59XG5cbmNvbnN0IGZhY2Vib29rQ29uZmlnID0ge1xuICBmYWNlYm9va19hcHBJZDogJzEwNTAwOTY1MzUxMjQzNDYnLFxuICBmYWNlYm9va19zZWNyZXQ6ICdkOTY5YzEzZjJkMTkxMTJlMjZjNmI5YzNmMjU2M2QyZicsXG4gIGZpZWxkczogJ25hbWUsZW1haWwscGljdHVyZScsXG4gIGZhY2Vib29rX2NhbGxiYWNrVVJMOiBmYWNlYm9va0NhbGxiYWNrVVJMLFxuICBwcm9maWxlVVJMOiAnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjIuNS9tZT9maWVsZHM9Zmlyc3RfbmFtZSxsYXN0X25hbWUsZW1haWwnLFxuICBwcm9maWxlRmllbGRzOiBbJ2lkJywgJ2VtYWlsJywgJ25hbWUnXSAvLyBGb3IgcmVxdWVzdGluZyBwZXJtaXNzaW9ucyBmcm9tIEZhY2Vib29rIEFQSVxufVxuXG5jb25zdCB0d2l0dGVyQ29uZmlnID0ge1xuICBjb25zdW1lcktleTogJ3JrQmlncTZ0bzBYWUxwbjgxSHdma3Z3ZUonLFxuICBjb25zdW1lclNlY3JldDogJzMwRDB4MlNPQ0hhVTVienlSV1BmdzhEQ1JsZU9GVnlJUm1RalJCZnp2azRRVjJ4ejZOJ1xufVxuXG5sZXQgdHdpdHRlclNlcnZlckNvbmZpZ3VyZSA9IHtcbiAgbG9naW5Vcmw6ICdodHRwczovL3BvbGl0aWNsLmNvbS9hdXRoL3YxL2F1dGgvdHdpdHRlcicsXG4gIHJlcXVlc3RUb2tlblVybDogJ2h0dHBzOi8vcG9saXRpY2wuY29tL2F1dGgvdjEvYXV0aC90d2l0dGVyL3JldmVyc2UnXG59XG5cbmlmICghcHJvY2Vzcy5lbnYuTk9ERV9FTlYgfHwgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgdHdpdHRlclNlcnZlckNvbmZpZ3VyZSA9IHtcbiAgICBsb2dpblVybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9hdXRoL3YxL2F1dGgvdHdpdHRlcicsXG4gICAgcmVxdWVzdFRva2VuVXJsOiAnaHR0cDovL2xvY2FsaG9zdDo0MDAwL2F1dGgvdjEvYXV0aC90d2l0dGVyL3JldmVyc2UnXG4gIH1cbn1cblxuZXhwb3J0IHsgZmFjZWJvb2tDb25maWcsIHR3aXR0ZXJDb25maWcsIHR3aXR0ZXJTZXJ2ZXJDb25maWd1cmUgfVxuIl19
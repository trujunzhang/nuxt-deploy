{
  "name": "root",
  "private": true,
  "devDependencies": {
    "cpx": "1.5.0",
    "npm-run-all": "4.1.5",
    "@babel/core": "7.8.6",
    "@babel/runtime": "7.8.4",
    "prettier": "1.19.1",
    "metro-react-native-babel-preset": "0.58.0",
    "jest": "25.1.0",
    "ts-jest": "25.2.1",
    "lerna": "3.20.2"
  },
  "scripts": {
    "start": "lerna run --scope=ieatta-nuxt start --stream",
    "build": "lerna run --scope=ieatta-nuxt build --stream",
    "generate": "lerna run --scope=ieatta-nuxt generate --stream",
    "rm.defines": "lerna run rm.assets --stream",
    "rm.defines.pending": "find . -name '@types' -type d | xargs rm -rf",
    "rm.yarn.lock": "find . -name 'yarn.lock' -type f -delete",
    "  *****  The following is maintain projects ****": "",
    "npm:reset": "lerna run npm:reset",
    "clean": "lerna exec -- rm -rf node_modules",
    "clear:cache": "rimraf $TMPDIR/react-* & watchman watch-del-all & yarn cache clean --force",
    "install:full": "yarn bootstrap:full",
    "  *****  The following is for lerna ****": "",
    "bootstrap": "lerna bootstrap --progress",
    "prepare.client": "lerna run prepare.client",
    "prepare.web": "lerna run prepare.web",
    "postinstall": "yarn ready.assets && yarn bootstrap",
    "postinstall.pending": "lerna run postinstall.pending --stream",
    "  =====  The following is ready[All] for apps =====": "",
    "ready.assets": "lerna run ready.assets && lerna run ready.post_assets",
    "ready:test": "yarn ready.web",
    "ready.android": "run-s  ready:android.*",
    "ready:android.simulator": "${ANDROID_SDK_ROOT}/emulator/emulator -avd  genymotion",
    "ready.ios": "run-s  ready:ios.*",
    "ready:ios.simulator": "open -a Simulator",
    "ready.client": "run-s  ready:client.*",
    "ready:client.app": "lerna run ready.client --stream",
    "ready.web.last": "lerna run ready.web --stream",
    "ready.web": "echo 'ready for web'",
    "  *****  The following is for checking apps ****": "",
    "checks": "run-s  check.*",
    "check.client": "lerna run app:compile:client --stream",
    "check.web": "lerna run app:compile:web --stream",
    "ts.lints": "run-s  ts.lint.*",
    "ts.lint.client": "lerna run ts-lint:client --stream",
    "ts.lint.web": "lerna run ts-lint:web --stream",
    "  *****  The following is for apps ****": "",
    "fix": "lerna run fix",
    "build.current": "lerna run build.current --stream",
    "build.current.pending": "lerna run build.current.pending --stream",
    "build.web.server": "lerna run  build:server --stream",
    "build.web.server:debug": "lerna run  build:server:debug --stream",
    "build.web.cloud": "lerna run  build:cloud --stream",
    "  *****  The following is for test apps ****": "",
    "test": "yarn tests && yarn lint",
    "tests": "run-s  test.*",
    "test.current": "yarn prepare.web && lerna run test.current --stream",
    "test.debug": "yarn prepare.web && lerna run test.debug --stream",
    "test.web": "yarn prepare.web && lerna run test.web --stream",
    "test.global": "yarn prepare.web && lerna run test.global --stream",
    "test.client": "lerna run test.client --stream",
    "test.lib": "yarn prepare.web && lerna run test.lib  --stream",
    "  *****  The following is for client ****": "",
    "expo:cache.reset": "watchman watch-del-all && yarn cache clean && lerna run reset:cache --scope=ieatta-client --stream",
    "expo:start": "yarn ready.client && lerna run expo:start --scope=ieatta-client --stream",
    "expo:android": "yarn ready.android && lerna run expo:android --scope=ieatta-client --stream",
    "expo:ios": "lerna run expo:ios --scope=ieatta-client --stream",
    "expo:publish": "yarn ready.client && lerna run expo:publish --scope=ieatta-client --stream",
    "expo:sketch": "lerna run render:watch --scope=sketch_client --stream",
    "  *****  The following is for web ****": "",
    "dev-reset": "yarn prepare.web && lerna run dev-reset --scope=ieatta-web --stream",
    "dev-all": "yarn prepare.web && lerna run dev-all --scope=ieatta-web --stream",
    "start:web": "yarn prepare.web && lerna run --scope=ieatta-web start --stream",
    "start:heroku": "cd packages/app && yarn start:heroku",
    "  *****  The following is demo projects ****": "",
    "demo.avatar.web.pending": "lerna run --scope=app-avatar-web-demo dev --stream",
    "demo.avatar.rn.pending": "lerna run start --scope=rn-avatar-client-demo --stream",
    "  *****  The following is for native-base ****": "",
    "demo.nativebase.expo:ios": "lerna run expo:ios --scope=expo-nativebase-demo --stream",
    "demo.nativebase.expo:android": "lerna run expo:android --scope=expo-nativebase-demo --stream",
    "demo.nativebase.rn:start": "lerna run start --scope=rn-nativebase-demo --stream",
    "expo.react-native-ui-kitten": "lerna run expo:ios --scope=expo-react-native-ui-kitten --stream",
    "expo.kittenTricks": "lerna run expo:ios --scope=expo-kittenTricks --stream",
    "expo.twitter-clone": "lerna run expo:ios --scope=expo-twitter-clone-demo --stream",
    "  *****  The following is for other ****": "",
    "demo.rn.permission": "lerna run start --scope=rn-permissions-demo --stream",
    "demo.rn.react-navigation": "lerna run start --scope=rn-react-navigation-demo --stream",
    "demo.rn.react-native-exception-handler": "lerna run start --scope=rn-react-native-exception-handler-demo --stream",
    "  *****  The following is for react-native-motion ****": "",
    "demo.expo-motion-interactions-detail-view": "lerna run expo:ios --scope=expo-motion-interactions-detail-view --stream",
    "  *****  The following is for react-native-camera-kit ****": "",
    "demo.rn-react-native-camera-kit": "lerna run start --scope=rn-react-native-camera-kit-demo --stream",
    "  *****  The following is for react-native-masked-text ****": "",
    "demo.rn-react-native-masked-text": "lerna run start --scope=rn-react-native-masked-text-demo --stream",
    "  *****  The following is useful examples ****": "",
    "demo.expo-react-navigation-iphonex-test": "lerna run expo:ios --scope=expo-react-navigation-iphonex-test --stream"
  }
}
